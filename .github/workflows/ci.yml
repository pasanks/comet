name: CI

on:
  push:
    branches:
      - main
      - development
      - feature/**
      - refactor/**
  pull_request:
    branches:
      - main
      - development
      - feature/**
      - refactor/**

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.0']
        dependency-stability: [ prefer-stable ]

        laravel: ['8.*']
        include:
          - laravel:  8.*
            testbench: 6.*

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
    - uses: actions/checkout@v2

    - name: Install PHP versions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}

    - name: Get Composer Cache Directory 2
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"

    - uses: actions/cache@v2
      id: actions-cache
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Cache PHP dependencies
      uses: actions/cache@v2
      id: vendor-cache
      with:
        path: vendor
        key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

    - name: Install Laravel Dependencies
      run: |
        composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
        composer update --${{ matrix.dependency-stability }} --prefer-dist --no-interaction --no-suggest

    - name: Show dir
      run: pwd
    - name: PHP Version
      run: php --version

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        SESSION_DRIVER: array

      run: vendor/bin/phpunit --testdox

    - name: Execute Code Sniffer via phpcs
      run: |
        composer require --dev squizlabs/php_codesniffer
        vendor/bin/phpcs --standard=PSR12 src

    - name: Execute Code Static Analysis (PHP Stan)
      run: |
        composer require --dev phpstan/phpstan
        vendor/bin/phpstan analyse src --level=4 --no-progress
